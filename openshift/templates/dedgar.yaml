---
kind: Template
apiVersion: v1
metadata:
  name: dedgar
  annotations:
    description: Dedgar site deployment, written in Golang
    tags: quickstart,golang,dedgar
    iconClass: icon-golang
labels:
  template: dedgar
objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: dedgar
    annotations:
      description: Exposes and load balances the application pods
  spec:
    ports:
    - name: 443-tcp
      port: 443
      targetPort: 8443
    selector:
      name: dedgar
- kind: Route
  apiVersion: v1
  metadata:
    name: dedgar
  spec:
    host: "${APPLICATION_DOMAIN}"
    tls:
      termination: passthrough
    to:
      kind: Service
      name: dedgar
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: dedgar
    annotations:
      description: Keeps track of changes in the application image
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: dedgar
    annotations:
      description: Defines how to build the application
  spec:
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: "${CONTEXT_DIR}"
    strategy:
      type: Source
    output:
      to:
        kind: DockerImage
        name: dedgar/dedgar:1.0
    triggers:
    - type: ConfigChange
    - type: GitHub
      github:
        secret: "${GITHUB_WEBHOOK_SECRET}"
    postCommit:
      script: go test -v ./...
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: dedgar
    annotations:
      description: Defines how to deploy the application server
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - dedgar
        from:
          kind: ImageStreamTag
          name: dedgar:latest
    - type: ConfigChange
    replicas: 1
    selector:
      name: dedgar
    template:
      metadata:
        name: dedgar
        labels:
          name: dedgar
      spec:
        containers:
        - name: dedgar
          image: dedgar
          ports:
          - containerPort: 8080
          volumeMounts:
          - mountPath: /opt/app-root/src/.aws
            name: dedgar-secrets
          - mountPath: /cert
            name: certpv
        volumes:
        - name: dedgar-secrets
          secret:
          secretName: dedgar-secrets
        - name: certpv
          persistentVolumeClaim:
            claimName: certpv
- kind: "PersistentVolumeClaim"
  apiVersion: "v1"
  metadata:
    name: "certpv"
  spec:
    accessModes:
      - "ReadWriteOnce"
    resources:
      requests:
        storage: "1Gi"
    volumeName: "certpv"
parameters:
- name: SOURCE_REPOSITORY_URL
  description: The URL of the repository with your application source code
  value: https://github.com/dedgarsites/s3-browser
- name: SOURCE_REPOSITORY_REF
  description: Set this to a branch name, tag or other ref of your repository if you are not using the default branch
- name: CONTEXT_DIR
  description: Set this to the relative path to your project if it is not in the root of your repository
- name: APPLICATION_DOMAIN
  description: The exposed hostname that will route to the service
  value: ''
- name: GITHUB_WEBHOOK_SECRET
  description: A secret string used to configure the GitHub webhook
  generate: expression
  from: "[a-zA-Z0-9]{40}"
