---
kind: Template
apiVersion: v1
metadata:
  name: dedgar
  annotations:
    description: Dedgar site deployment, written in Golang
    tags: quickstart,golang,dedgar
    iconClass: icon-golang
labels:
  template: dedgar
objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: dedgar
    annotations:
      description: Exposes and load balances the application pods
  spec:
    ports:
    - name: 443-tcp
      port: 443
      targetPort: "${TLS_PORT}"
    selector:
      name: dedgar
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    labels:
      app: dedgar
    name: dedgar
    namespace: dedgar
  spec:
    host: "${APP_DOMAIN}"
    port:
      targetPort: 443-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: dedgar
      weight: 100
  status:
    ingress:
      - conditions:
          - lastTransitionTime: '2018-03-24T19:15:59Z'
            status: 'True'
            type: Admitted
        host: "${APP_DOMAIN}" 
        routerCanonicalHostname: elb.b9ad.pro-us-east-1.openshiftapps.com
        routerName: router
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/image.dockerRepositoryCheck: 2018-07-25T10:50:45Z
    creationTimestamp: null
    generation: 21
    labels:
      app: dedgar
    name: dedgar
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: dedgar/"${APP_NAME}":latest
      from:
        kind: DockerImage
        name: quay.io/dedgar/"${APP_NAME}":latest
      generation: 1
      importPolicy:
        scheduled: true
      name: "latest"
      referencePolicy:
        type: Source
    - annotations:
        openshift.io/imported-from: dedgar/"${APP_NAME}":latest
      from:
        kind: DockerImage
        name: quay.io/dedgar/"${APP_NAME}":latest
      generation: 1
      importPolicy:
        scheduled: true
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: dedgar
    annotations:
      description: Defines how to deploy the application server
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - dedgar
        from:
          kind: ImageStreamTag
          name: dedgar:latest
    - type: ConfigChange
    replicas: 1
    selector:
      name: dedgar
    template:
      metadata:
        name: dedgar
        labels:
          name: dedgar
      spec:
        containers:
        - name: dedgar
          image: dedgar
          env:
          - name: PAUSE_ON_START
            value: "false"
          - name: LEGO_CERT
            value: "true"
          ports:
          - containerPort: "${TLS_PORT}" 
          volumeMounts:
          - mountPath: /opt/app-root/src/.aws
            name: dedgar-creds
          - mountPath: /secrets
            name: dedgar-secrets
          - mountPath: /cert
            name: certpv
        volumes:
        - name: dedgar-creds
          secret:
            secretName: dedgar-creds
        - name: dedgar-secrets
          secret:
            secretName: dedgar-secrets
        - name: certpv
          persistentVolumeClaim:
            claimName: certpvc
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: certpvc
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
parameters:
- name: APP_DOMAIN
  description: The exposed hostname that will route to the service, and be used with LetsEncrypt 
  value: 'www.tacofreeze.com'
- name: TLS_PORT
  description: Port that the application will use to listen for connections
  value: '8443'
- name: CERT_EMAIL
  description: The email used with LetsEncrypt
  value: 's3browser@shinobu.ninja'
- name: CERT_PATH 
  description: The path within the container that will contain the certs from LetsEncrypt
  value: '/cert/lego'
- name: CERT_FILENAME
  description: The name of the certificate files generated by LetsEncrypt
  value: 'dedgar'
- name: CERT_SERVER
  description: The name of the LetsEncrypt CA server
  value: 'https://acme-v02.api.letsencrypt.org/directory'
- name: APP_NAME
  description: The name of the application to run from the start script and pull from the registry
  value: 's3-browser'